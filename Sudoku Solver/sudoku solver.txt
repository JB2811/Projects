import copy
def main():
 row=[]
 col=[]
 s=sum([1,2,3,4,5,6,7,8,9])
 '''
 for i in range(0,9):
  c=list()
  for j in range(0,9):
   print("\nEnter input for [",i,"][",j,"]: ",end="")   
   c.append(int(input()))
  row.append(copy.deepcopy(c))
 '''
 row=[[0,8,0,0,2,0,5,6,0],[0,0,0,1,0,0,0,0,7],[0,0,0,0,0,0,0,0,0],[0,5,0,0,9,0,4,0,8],[0,0,7,8,0,0,0,0,3],[0,9,0,0,1,0,0,5,0],[2,0,4,0,0,0,8,0,0],[0,6,0,0,8,5,0,0,0],[0,0,0,2,0,0,1,0,0]]
 col=[]
 sud=[]
 for i in range(0,9):
  c=list()
  for j in range(0,9):
   c.append(row[j][i])
  col.append(copy.deepcopy(c))
 i=0; j=0
 while(i<9):
  c=list()
  c1=list()
  c2=list()
  z=i+3; x=j+3
  while(i<z):
   while(j<x):
    c.append(row[i][j])
    c1.append(row[i][j+3])
    c2.append(row[i][j+6])
    j=j+1
   j=x-3
   i=i+1
  i-i+3
  sud.append(copy.deepcopy(c))
  sud.append(copy.deepcopy(c1))
  sud.append(copy.deepcopy(c2))
 print("\nRows matrix:- ")
 for i in range(0,9):
  for j in range(0,9):
   print(row[i][j],end=" ")
  print()
 print("\nCol matrix:- ")
 for i in range(0,9):
  for j in range(0,9):
   print(col[i][j],end=" ")
  print()
 print("\nBlock matrix:-")
 for i in range(0,9):
  for j in range(0,9):
   print(sud[i][j],end=" ")
  print()
 p=1; w=0
 while(p>0):
  p=0
  for i in range(0,9):
   if(row[i].count(0)==1):
     p=p+1
     t=s-sum(row[i])
     q=row[i].index(0)
     row[i][row[i].index(0)]=t
     col[row[i].index(t)][i]=t
     print("\nr: ",i," ",q," ",int(i/3)*3+int(q/3)," ",(i%3)*3+q%3)
     sud[int(i/3)*3+int(q/3)][(i%3)*3+q%3]=t
   if(col[i].count(0)==1):
     p=p+1
     t=s-sum(col[i])
     q=col[i].index(0)
     col[i][col[i].index(0)]=t
     row[col[i].index(t)][i]=t
     sud[int(i/3)+int(q/3)*3][(i%3)+(q%3)*3]=t
     print("\nc: ",i," ",q," ",int(q/3)*3+int(i/3)," ",i%3+(q%3)*3)
  for i in range(0,9):
   for j in range(1,10):
    if j not in sud[i]:
     l=[]
     p=p+1
     #i%%3==0
     if(i%3==0):
      if(i==0):
       z=i+3; x=i+6
      elif(i==3):
       z=i-3; x=i+3
      else:
       z=i-6; x=i-3    
      a=[]
      print(i)
      if(sud[i+1].count(j)>0):
       a.append(int(sud[i+1].index(j)/3))
      if(sud[i+2].count(j)>0):
       a.append(int(sud[i+2].index(j)/3))
      b=[]
      if(sud[z].count(j)>0):
       b.append(int(sud[z].index(j)%3))
      if(sud[x].count(j)>0):
       b.append(int(sud[x].index(j)%3))
      print(a,b)
      if(len(b)==0 and len(a)==0):
       continue
      if(len(a)==2 and len(b)==2):
       for k in range(3):
        if k not in a:
         a=k
         break
       for k in range(3):
        if(k not in b):
         b=k
         break
       sud[i][a*3+b]=j;
       b=a*3+b
       row[int(i/3)*3+int(b/3)][b%3]=j
       col[b%3][int(i/3)*3+int(b/3)]=j
       print("\na=2,b=2 ",i," ",b," ",int(i/3)*3+int(b/3)," ",b%3," ")
      elif(len(a)==2 and len(b)!=2):
       for k in range(3):
        if k not in a:
         c=k
         break
       print(a," ",c," ",j)
       if(sud[i][c*3:c*3+3].count(0)==1):
        a=sud[i][c*3:c*3+3].index(0)
        sud[i][c*3+a]=j
        a=c*3+a
        row[int(i/3)*3+int(a/3)][a%3]=j
        col[a%3][int(i/3)*3+int(a/3)]=j
        print("\na=2,b!=2 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",(a%3))
        continue
       elif(sud[i][c*3:c*3+3].count(0)==2 and len(b)==1):
        a=sud[i][c*3:c*3+3];
        if(a[b[0]]==0):
         for k in range(3):
          if k not in b:
           if a[k]==0:
            a=k
            break
         sud[i][c*3+a]=j
         a=c*3+a
         row[int(i/3)*3+int(a/3)][a%3]=j
         col[a%3][int(i/3)*3+int(a/3)]=j
         print("\na=2,b=1 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",(a%3))
         continue
      elif(len(b)==2 and len(a)!=2):
       for k in range(3):
        if k not in b:
         c=k
         break
       print(b," ",c," ",j)
       if(col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3].count(0)==1):
        a=col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3].index(0)
        q=(i*3+c)%9;
        a=int(i/3)*3+a
        col[q][a]=j
        row[a][q]=j
        sud[int(q/3)+int(a/3)*3][(q%3)+(a%3)*3]=j
        print("\nb=2,a!=2 ",int(a/3)*3+int(q/3)," ",q%3+(a%3)*3," ",a," ",q)
        continue
       elif(col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3].count(0)==2 and len(a)==1):
        b=col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3];
        if(b[a[0]]==0):
         for k in range(3):
          if k not in a:
           if b[k]==0:
            b=k
            break
         q=(i*3+c)%9
         b=int(i/3)*3+b
         col[q][b]=j
         row[b][q]=j
         sud[int(q/3)+int(b/3)*3][(q%3)+(b%3)*3]=j
         print("\nb=2,a=1 ",int(b/3)*3+int(q/3)," ",q%3+(b%3)*3," ",b," ",q)
         continue
      elif(len(a)==1 and len(b)==1):
       l1=[]
       for k in range(a[0]*3,a[0]*3+3):
        l1.append(k)
       for k in range(9):
        if(k%3!=b[0] and k not in l1):
         l.append(sud[i][k])
         if(sud[i][k]==0):
          a=k
       if(l.count(0)==1):
        sud[i][a]=j
        row[int(i/3)*3+int(a/3)][a%3]=j
        col[a%3][int(i/3)*3+int(a/3)]=j
        print("\na=1,b=1 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",(a%3))
        continue
      elif(len(b)==1 and len(a)==0):
       for k in range(9):
        if(k%3!=b[0]):
         l.append(sud[i][k])
         if(sud[i][k]==0):
          a=k
       if(l.count(0)==1):
        sud[i][a]=j
        row[int(i/3)*3+int(a/3)][a%3]=j
        col[a%3][int(i/3)*3+int(a/3)]=j
        print("\nb=1,a=0 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",(a%3))
        continue
      elif(len(a)==1 and len(b)==0):
       for k in range(9):
        if(int(k/3)!=a[0]):
         l.append(sud[i][k])
         if(sud[i][k]==0):
          g=k
       if(l.count(0)==1):
        sud[i][g]=j
        row[int(i/3)*3+int(g/3)][g%3]=j
        col[g%3][int(i/3)*3+int(g/3)]=j
        print("\na=1,b=0 ",i,": ",g," ",int(i/3)*3+int(g/3)," ",(g%3))
        continue
      else:
       pass
     #i%3==1
     elif(i%3==1):
      if(i==1):
       z=i+3; x=i+6
      elif(i==4):
       z=i-3; x=i+3
      else:
       z=i-6; x=i-3    
      a=[]
      print(i)
      if(sud[i-1].count(j)>0):
       a.append(int(sud[i-1].index(j)/3))
      if(sud[i+1].count(j)>0):
       a.append(int(sud[i+1].index(j)/3))
      b=[]
      if(sud[z].count(j)>0):
       b.append(int(sud[z].index(j)%3))
      if(sud[x].count(j)>0):
       b.append(int(sud[x].index(j)%3))
      print(a,b)
      if(len(b)==0 and len(a)==0):
       continue
      if(len(a)==2 and len(b)==2):
       for k in range(3):
        if k not in a:
         a=k
         break
       for k in range(3):
        if(k not in b):
         b=k
         break
       sud[i][a*3+b]=j;
       b=a*3+b
       row[int(i/3)*3+int(b/3)][3+b%3]=j
       col[3+b%3][int(i/3)*3+int(b/3)]=j
       print("\na=2,b=2 ",i," ",b," ",int(i/3)*3+int(b/3)," ",3+b%3," ")
      elif(len(a)==2 and len(b)!=2):
       for k in range(3):
        if k not in a:
         c=k
         break
       print(a," ",c," ",j)
       if(sud[i][c*3:c*3+3].count(0)==1):
        a=sud[i][c*3:c*3+3].index(0)
        sud[i][c*3+a]=j
        a=c*3+a
        row[int(i/3)*3+int(a/3)][3+a%3]=j
        col[3+a%3][int(i/3)*3+int(a/3)]=j
        print("\na=2,b!=2 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",3+(a%3))
        continue
       elif(sud[i][c*3:c*3+3].count(0)==2 and len(b)==1):
        a=sud[i][c*3:c*3+3];
        if(a[b[0]]==0):
         for k in range(3):
          if k not in b:
           if a[k]==0:
            a=k
            break
         sud[i][c*3+a]=j
         a=c*3+a
         row[int(i/3)*3+int(a/3)][3+a%3]=j
         col[3+a%3][int(i/3)*3+int(a/3)]=j
         print("\na=2,b=1 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",3+(a%3))
         continue
      elif(len(b)==2 and len(a)!=2):
       for k in range(3):
        if k not in b:
         c=k
         break
       print(b," ",c," ",j)
       if(col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3].count(0)==1):
        a=col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3].index(0)
        q=(i*3+c)%9;
        a=int(i/3)*3+a
        col[q][a]=j
        row[a][q]=j
        sud[int(q/3)+int(a/3)*3][(q%3)+(a%3)*3]=j
        print("\nb=2,a!=2 ",int(a/3)*3+int(q/3)," ",q%3+(a%3)*3," ",a," ",q)
        continue
       elif(col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3].count(0)==2 and len(a)==1):
        b=col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3];
        if(b[a[0]]==0):
         for k in range(3):
          if k not in a:
           if b[k]==0:
            b=k
            break
         q=(i*3+c)%9
         b=int(i/3)*3+b
         col[q][b]=j
         row[b][q]=j
         sud[int(q/3)+int(b/3)*3][(q%3)+(b%3)*3]=j
         print("\nb=2,a=1 ",int(b/3)*3+int(q/3)," ",q%3+(b%3)*3," ",b," ",q)
         continue
      elif(len(a)==1 and len(b)==1):
       l1=[]
       for k in range(a[0]*3,a[0]*3+3):
        l1.append(k)
       for k in range(9):
        if(k%3!=b[0] and k not in l1):
         l.append(sud[i][k])
         if(sud[i][k]==0):
          a=k
       if(l.count(0)==1):
        sud[i][a]=j
        row[int(i/3)*3+int(a/3)][3+a%3]=j
        col[3+a%3][int(i/3)*3+int(a/3)]=j
        print("\na=1,b=1 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",(3+a%3))
        continue
      elif(len(b)==1 and len(a)==0):
       for k in range(9):
        if(k%3!=b[0]):
         l.append(sud[i][k])
         if(sud[i][k]==0):
          a=k
       print(l)
       if(l.count(0)==1):
        sud[i][a]=j
        row[int(i/3)*3+int(a/3)][3+a%3]=j
        col[3+a%3][int(i/3)*3+int(a/3)]=j
        print("\nb=1,a=0 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",(3+a%3))
        continue
      elif(len(a)==1 and len(b)==0):
       for k in range(9):
        if(int(k/3)!=a[0]):
         l.append(sud[i][k])
         if(sud[i][k]==0):
          g=k
       if(l.count(0)==1):
        sud[i][g]=j
        row[int(i/3)*3+int(g/3)][3+g%3]=j
        col[3+g%3][int(i/3)*3+int(g/3)]=j
        print("\na=1,b=0 ",i,": ",g," ",int(i/3)*3+int(g/3)," ",(3+g%3))
        continue
      else:
       pass
     #i%3==2
     elif(i%3==2):
      if(i==2):
       z=i+3; x=i+6
      elif(i==5):
       z=i-3; x=i+3
      else:
       z=i-6; x=i-3    
      a=[]
      print(i)
      if(sud[i-1].count(j)>0):
       a.append(int(sud[i-1].index(j)/3))
      if(sud[i-2].count(j)>0):
       a.append(int(sud[i-2].index(j)/3))
      b=[]
      if(sud[z].count(j)>0):
       b.append(int(sud[z].index(j)%3))
      if(sud[x].count(j)>0):
       b.append(int(sud[x].index(j)%3))
      print(a,b)
      if(len(b)==0 and len(a)==0):
       continue
      if(len(a)==2 and len(b)==2):
       for k in range(3):
        if k not in a:
         a=k
         break
       for k in range(3):
        if(k not in b):
         b=k
         break
       sud[i][a*3+b]=j;
       b=a*3+b
       row[int(i/3)*3+int(b/3)][6+b%3]=j
       col[6+b%3][int(i/3)*3+int(b/3)]=j
       print("\na=2,b=2 ",i," ",b," ",int(i/3)*3+int(b/3)," ",6+b%3," ")
      elif(len(a)==2 and len(b)!=2):
       for k in range(3):
        if k not in a:
         c=k
         break
       print(a," ",c," ",j)
       if(sud[i][c*3:c*3+3].count(0)==1):
        a=sud[i][c*3:c*3+3].index(0)
        sud[i][c*3+a]=j
        a=c*3+a
        row[int(i/3)*3+int(a/3)][6+a%3]=j
        col[6+a%3][int(i/3)*3+int(a/3)]=j
        print("\na=2,b!=2 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",(6+a%3))
        continue
       elif(sud[i][c*3:c*3+3].count(0)==2 and len(b)==1):
        a=sud[i][c*3:c*3+3];
        if(a[b[0]]==0):
         for k in range(3):
          if k not in b:
           if a[k]==0:
            a=k
            break
         sud[i][c*3+a]=j
         a=c*3+a
         row[int(i/3)*3+int(a/3)][6+a%3]=j
         col[6+a%3][int(i/3)*3+int(a/3)]=j
         print("\na=2,b=1 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",(6+a%3))
         continue
      elif(len(b)==2 and len(a)!=2):
       for k in range(3):
        if k not in b:
         c=k
         break
       print(b," ",c," ",j)
       if(col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3].count(0)==1):
        a=col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3].index(0)
        q=(i*3+c)%9;
        a=int(i/3)*3+a
        col[q][a]=j
        row[a][q]=j
        sud[int(q/3)+int(a/3)*3][(q%3)+(a%3)*3]=j
        print("\nb=2,a!=2 ",int(q/3)+int(a/3)*3," ",q%3+(a%3)*3," ",a," ",q)
        continue
       elif(col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3].count(0)==2 and len(a)==1):
        b=col[(i*3+c)%9][int(i/3)*3:int(i/3)*3+3];
        if(b[a[0]]==0):
         for k in range(3):
          if k not in a:
           if b[k]==0:
            b=k
            break
         q=(i*3+c)%9
         b=int(i/3)*3+b
         col[q][b]=j
         row[b][q]=j
         sud[int(q/3)+int(b/3)*3][(q%3)+(b%3)*3]=j
         print("\nb=2,a=1 ",int(b/3)*3+int(q/3)," ",q%3+(b%3)*3," ",b," ",q)
         continue
      elif(len(a)==1 and len(b)==1):
       l1=[]
       for k in range(a[0]*3,a[0]*3+3):
        l1.append(k)
       for k in range(9):
        if(k%3!=b[0] and k not in l1):
         l.append(sud[i][k])
         if(sud[i][k]==0):
          g=k
       if(l.count(0)==1):
        sud[i][g]=j
        row[int(i/3)*3+int(g/3)][6+g%3]=j
        col[6+g%3][int(i/3)*3+int(g/3)]=j
        print("\na=1,b=1 ",i,": ",g," ",int(i/3)*3+int(g/3)," ",(6+g%3))
        continue
      elif(len(b)==1 and len(a)==0):
       for k in range(9):
        if(k%3!=b[0]):
         l.append(sud[i][k])
         if(sud[i][k]==0):
          a=k
       if(l.count(0)==1):
        sud[i][a]=j
        row[int(i/3)*3+int(a/3)][6+a%3]=j
        col[6+a%3][int(i/3)*3+int(a/3)]=j
        print("\nb=1,a=0 ",i,": ",a," ",int(i/3)*3+int(a/3)," ",(6+a%3))
        continue
      elif(len(a)==1 and len(b)==0):
       for k in range(9):
        if(int(k/3)!=a[0]):
         l.append(sud[i][k])
         if(sud[i][k]==0):
          g=k
       if(l.count(0)==1):
        sud[i][g]=j
        row[int(i/3)*3+int(g/3)][6+g%3]=j
        col[6+g%3][int(i/3)*3+int(g/3)]=j
        print("\na=1,b=0 ",i,": ",g," ",int(i/3)*3+int(g/3)," ",(6+g%3))
        continue
      else:
       pass
  print("\nRows matrix:- ")
  for i in range(0,9):
   for j in range(0,9):
    print(row[i][j],end=" ")
   print()
  print("\nCol matrix:- ")
  for i in range(0,9):
   for j in range(0,9):
    print(col[i][j],end=" ")
   print()
  print("\nBlock matrix:-")
  for i in range(0,9):
   for j in range(0,9):
    print(sud[i][j],end=" ")
   print()
  if(w==p):
   p=0
   print("c: ",c)
  else:
   w=p
   print("p: ",p)

 def guess(row,r,c,n):
  for x in range(9):
   if row[r][x]==n:
    return False
  for x in range(9):
   if row[x][c]==n:
    return False
  r=r-r%3
  c=c-c%3
  for i in range(3):
   for j in range(3):
    if row[i+r][j+c]==n:
     return False
  return True

 def testandsolve(row,r,c):
  if (r==8 and c==9):
   return True
  if c==9:
   r+=1
   c=0
  if row[r][c]>0:
   return testandsolve(row,r,c+1)
  for n in range(1,10,1):
   if guess(row,r,c,n):
    row[r][c]=n
    if testandsolve(row,r,c+1):
     return True
   row[r][c]=0
  return False
 
 if(testandsolve(row, 0, 0)):
  pass
 else:
  print("invalid input, no solution exists for that combination. ")
  
 print("\nRows Matrix:-")
 for i in range(0,9):
  for j in range(0,9):
   print(row[i][j],end=" ")
  print();
 print("\nCol Matrix:-")
 for i in range(0,9):
  for j in range(0,9):
   print(col[i][j],end=" ")
  print();
 print("\nBlock Matrix:-")
 for i in range(0,9):
  for j in range(0,9):
   print(sud[i][j],end=" ")
  print();
   
main()
